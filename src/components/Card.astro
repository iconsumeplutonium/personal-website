---
interface Link {
	name: string;
	url: string;
}
interface Props {
	image: string;
	title: string;
	body: string;
	stack: string;
	links?: Link[];
	year: number;
}

const { image, title, body, stack, links, year } = Astro.props;
---

<li class="card">
	<div class="card__link">
		<div class="card__image_div">
			<img
				class="card__img"
				src={image}
				role="presentation"
				width="300"
				height="169"
				loading="lazy"
				decoding="async"
			/>
		</div>
		<div class="card__content">
			<div style="display: flex; flex-direction: row; justify-content: space-between; align-items: baseline;">
				<h3 class="card__title" style="margin-bottom: -0.6rem;">
					{title}
				</h3>
				<h3 style="margin: 0; font-size: 1.2rem; color: #aaa;">{year}</h3>
			</div>
			<div style="display: flex; flex-direction: row; gap: 0.25rem;">
				{stack.split(", ").map((s) => <span class="badge">{s}</span>)}
			</div>
			<p class="card__txt">
				{body}
			</p>
			<div style="display: flex; flex-direction: row;">
				{links && links.map((l) => <a href={l.url} style="padding-right: 10px;">{l.name}</a>)}
			</div>
		</div>
	</div>
</li>
